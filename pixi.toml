[project]
name = "osqp-eigen"
authors = ["Stefano Dafarra <stefano.dafarra@iit.it", "Giulio Romualdi <giulio.romualdi@iit.it>"]
# As this version is currently ignored, we do not
# waste effort in mantain it in synch with the value
# specified in CMakeLists.txt
version = "0.0.0"
description = "Simple Eigen-C++ wrapper for OSQP library."
channels = ["conda-forge"]
platforms = ["linux-64", "linux-aarch64", "win-64", "osx-64", "osx-arm64"]


[target.win.activation.env]
CMAKE_INSTALL_PREFIX = "%CONDA_PREFIX%\\Library"
OSQPEIGEN_RUN_Valgrind_tests = "OFF"

[target.unix.activation.env]
CMAKE_INSTALL_PREFIX = "$CONDA_PREFIX"
OSQPEIGEN_RUN_Valgrind_tests = "OFF"

[target.linux.activation.env]
OSQPEIGEN_RUN_Valgrind_tests = "ON"

[tasks]
configure = { cmd = [
    "cmake",
    "-DCMAKE_BUILD_TYPE=Release",
    "-DOSQPEIGEN_RUN_Valgrind_tests=$OSQPEIGEN_RUN_Valgrind_tests",
    "-DBUILD_TESTING:BOOL=ON",
    # Use the cross-platform Ninja generator
    "-G",
    "Ninja",
    # The source is in the root directory
    "-S",
    ".",
    # We wanna build in the .build directory
    "-B",
    ".build",
]}

build = { cmd = "cmake --build .build --config Release", depends-on = ["configure"] }
test = { cmd = "ctest --test-dir .build --build-config Release --output-on-failure", depends-on = ["build"] }
install = { cmd = ["cmake", "--install", ".build", "--config", "Release"], depends-on = ["build"] }
uninstall = { cmd = ["cmake", "--build", ".build", "--target", "uninstall"]}

[dependencies]
cmake = "*"
c-compiler = "*"
cxx-compiler = "*"
ninja = "*"
pkg-config = "*"
libosqp = "*"
eigen = "*"
ycm-cmake-modules = "*"
catch2 = "*"

[target.linux.dependencies]
valgrind = "*"

[feature.bazel.dependencies]
bazel = "*"
# Transitive dependencies of bazel-cmake-deps-override
toml = "*"

[feature.bazel.pypi-dependencies]
bazel-cmake-deps-override = { git ="https://github.com/ami-iit/bazel-cmake-deps-override.git", rev = "8b8b9c9c22a67f76b8fe819e88c8f27899247007" }

[feature.bazel.tasks]
clean-bazel = "bazel clean"

# Task to test and build osqp-eigen with bazel with bazel-provided dependencies
test-bazel = "bazel test //..."

# Tasks to test and build osqp-eigen with bazel with bazel-provided dependencies
bazel-ext-deps-generate-metadata = "bazel-cmake-deps-override osqp eigen catch2"
test-bazel-ext-deps = { cmd = "bazel --bazelrc=./bazel-cmake-deps-overrides/bazelrc test -s //...", depends-on = "bazel-ext-deps-generate-metadata" }

[environments]
# solve-group is meant to be sure that for common
# dependencies the version used by the two envs are the same
default = {solve-group = "common"}
bazel = { features = ["bazel"], solve-group = "common"}
